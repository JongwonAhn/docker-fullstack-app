version: "3"
services:
#개발과 운영을 분리하여 실행.
#  frontend:
#   build:
#    dockerfile: Dockerfile.dev
#    context: ./frontend
#   volumes:
#    - /app/node_modules
#    - ./frontend:/app
#   stdin_open: true

 frontend:
  image: ajw9491/docker-frontend
  volumes:
    - /app/node_modules
    - ./frontend:/app
  stdin_open: true
  mem_limit: 128m

#  nginx:
#   restart: always
#   build:
#    dockerfile: Dockerfile
#    context: ./nginx
#   ports:
#    - "3000:80"

 nginx: 
  restart: always
  image: ajw9491/docker-nginx
  ports: 
    - "80:80"

#  backend:
#   build:
#    dockerfile: Dockerfile.dev
#    context: ./backend
#   container_name: app_backend
#   volumes:
#    - /app/node_modules
#    - ./backend:/app

 backend:
  image: ajw9491/docker-backend
  container_name: app_backend
  volumes:
    - /app/node_modules
    - ./backend:/app
  mem_limit: 128m
  environment: 
    MYSQL_HOST: mysql 
    MYSQL_USER: root 
    MYSQL_ROOT_PASSWORD: 12345678
    MYSQL_DATABASE: myapp
    MYSQL_PORT: 3306   
   
#  mysql:
#   build: ./mysql
#   restart: unless-stopped
#   container_name: app_mysql
#   ports:
#    - "3306:3306"
#   volumes:
#    - ./mysql/mysql_data:/var/lib/mysql
#    - ./mysql/sqls/:/docker-entrypoint-initdb.d/
#   environment:
#    MYSQL_ROOT_PASSWORD: 1111
#    MYSQL_DATABASE: myapp